# This is a sample .env file that is populated with every available configuration value.
# To use this sample environment file, place it in the project root (next to the executable if
# using a release), rename it to ".env", and then edit the file as necessary.

####################################################################################################
# GENERAL SETTINGS
####################################################################################################

parallelImports=10

workingDir=/hdc/crypt/src/emr_importer/working

####################################################################################################
# LOGGER SETTINGS
####################################################################################################

# These options control the log files that are generated by the application.

# The level of information to log. Lower levels include levels above (eg info level include error).
#  error: log only if there is an error.
#  info: log workflow and timing information. (default)
#  verbose: log timing and count for each export, and transfer progress.
#  debug: log every SQL query.
# logger_level=info

# The filename of the logfile to write output to. The user running the exporter must have access
# to create/write to files and also to create the directory if it does not exist.
# (default ./logs/exporter.log).
# logger_filename=./logs/exporter.log

# Max size in bytes of the logfile, if the size is exceeded then a new file is created, a counter
# will become a suffix of the log file. (default 1 MB)
# logger_maxsize=1048576

# Limit the number of files created when the size of the logfile is exceeded. (default 10)
# logger_maxFiles=10

# If true, all log files but the current one will be zipped. (default true)
# logger_zippedArchive=true

# If true, log files will be rolled based on maxsize and maxfiles, but in ascending order. The
# filename will always have the most recent log lines. The larger the appended number, the older
# the log file. This option requires maxFiles to be set, or it will be ignored. (default true)
# logger_tailable=true

####################################################################################################
# SOURCE SETTINGS
####################################################################################################

# These options control the connection information for the source database.

# A directory where files will be temporarily created before being sent to the remote server
# (endpoint). The database user/service must have access to write files to this directory and
# the user running the node application must also have access to read/write/delete from this
# directory. For default Windows/Postgres this means that the "Network Service" user must be
# added to the directory permissions. This directory will be automatically created by the
# application if it does not exist, but the permissions must be applied manually. (required)
sourceDir=/hdc/crypt/uploads/

####################################################################################################
# TARGET SETTINGS
####################################################################################################

# These options control the connection information for transmitting the exported file to a remote
# server (eg endpoint).


# The dialect of the database. Currently postgres and mysql are supported. (required)
target_dialect=postgres

# The hostname of the database. The exporter must be run on the same server as the database,
# so this should very likely be set to localhost. (default localhost)
target_host=localhost

# The port of the database. (required)
target_port=5432

# The name of the database. (required)
target_database=vault

# The user to use to connect to the database. (required)
target_user=adapter

# The password to use that corresponds with the source user. (required)
target_password="{{ adapter_pass }}"

# Attempt to connect to the source database this many times before throwing an error. These are
# mostly provided if the adapter and the source database are run using Docker and started at the
# same time. (default 10)
# connectionAttempts=10

# Wait for this many milliseconds between each connection attempt. (default 1 second)
# connectionInterval=1000

